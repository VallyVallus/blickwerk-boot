From ceb767ab5a7014912f6d1dde9c3a202bc3f5b52b Mon Sep 17 00:00:00 2001
From: Markus Valentin <valy@systemausfall.org>
Date: Sat, 18 Mar 2017 11:11:29 +0100
Subject: [PATCH 01/12] add urwerk board related files inspired by imx28evk

---
 board/silicann/urwerk/Kconfig     |  14 +++
 board/silicann/urwerk/MAINTAINERS |   6 +
 board/silicann/urwerk/Makefile    |  12 ++
 board/silicann/urwerk/iomux.c     | 195 ++++++++++++++++++++++++++++++
 board/silicann/urwerk/urwerk.c    | 133 ++++++++++++++++++++
 include/configs/urwerk.h          | 178 +++++++++++++++++++++++++++
 6 files changed, 538 insertions(+)
 create mode 100644 board/silicann/urwerk/Kconfig
 create mode 100644 board/silicann/urwerk/MAINTAINERS
 create mode 100644 board/silicann/urwerk/Makefile
 create mode 100644 board/silicann/urwerk/iomux.c
 create mode 100644 board/silicann/urwerk/urwerk.c
 create mode 100644 include/configs/urwerk.h

diff --git a/board/silicann/urwerk/Kconfig b/board/silicann/urwerk/Kconfig
new file mode 100644
index 0000000000..9110960969
--- /dev/null
+++ b/board/silicann/urwerk/Kconfig
@@ -0,0 +1,14 @@
+if TARGET_URWERK
+
+config SYS_BOARD
+	default "urwerk"
+
+config SYS_VENDOR
+	default "silicann"
+
+config SYS_SOC
+	default "mxs"
+
+config SYS_CONFIG_NAME
+	default "urwerk"
+endif
diff --git a/board/silicann/urwerk/MAINTAINERS b/board/silicann/urwerk/MAINTAINERS
new file mode 100644
index 0000000000..6a4d41bcfe
--- /dev/null
+++ b/board/silicann/urwerk/MAINTAINERS
@@ -0,0 +1,6 @@
+URWERK BOARD
+M:	Markus Valentin <valentin@silicann.com>
+S:	Maintained
+F:	board/silicann/urwerk
+F:	include/configs/urwerk.h
+F:	configs/urwerk_defconfig
diff --git a/board/silicann/urwerk/Makefile b/board/silicann/urwerk/Makefile
new file mode 100644
index 0000000000..ebc6b42329
--- /dev/null
+++ b/board/silicann/urwerk/Makefile
@@ -0,0 +1,12 @@
+#
+# (C) Copyright 2017
+# Markus Valentin Silicann Systems GmbH valentin@silicann.com
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+ifndef	CONFIG_SPL_BUILD
+obj-y	:= urwerk.o
+else
+obj-y	:= iomux.o
+endif
diff --git a/board/silicann/urwerk/iomux.c b/board/silicann/urwerk/iomux.c
new file mode 100644
index 0000000000..c92f754870
--- /dev/null
+++ b/board/silicann/urwerk/iomux.c
@@ -0,0 +1,195 @@
+/*
+ * Silicann Urwerk IOMUX setup
+ *
+ * Copyright (C) 2015-2017 Silicann Systems GmbH
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <config.h>
+#include <asm/io.h>
+#include <asm/arch/iomux-mx28.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/sys_proto.h>
+
+#define	MUX_CONFIG_SSP0	(MXS_PAD_3V3 | MXS_PAD_8MA | MXS_PAD_PULLUP)
+#define	MUX_CONFIG_SSP1	(MXS_PAD_3V3 | MXS_PAD_8MA | MXS_PAD_PULLUP)
+#define	MUX_CONFIG_SSP2	(MXS_PAD_3V3 | MXS_PAD_4MA | MXS_PAD_PULLUP)
+#define	MUX_CONFIG_SSP3	(MXS_PAD_3V3 | MXS_PAD_4MA | MXS_PAD_PULLUP)
+#define	MUX_CONFIG_ENET	(MXS_PAD_3V3 | MXS_PAD_8MA | MXS_PAD_PULLUP)
+#define	MUX_CONFIG_EMI	(MXS_PAD_1V8 | MXS_PAD_12MA | MXS_PAD_NOPULL)
+#define	MUX_CONFIG_USB0	(MXS_PAD_3V3 | MXS_PAD_8MA | MXS_PAD_NOPULL)
+
+const iomux_cfg_t iomux_setup[] = {
+	/* DUART */
+	MX28_PAD_PWM0__DUART_RX,
+	MX28_PAD_PWM1__DUART_TX,
+
+    /*UART0*/
+    MX28_PAD_AUART0_RX__AUART0_RX,
+    MX28_PAD_AUART0_TX__AUART0_TX,
+
+    /*UART1*/
+    MX28_PAD_AUART1_RX__AUART1_RX,
+    MX28_PAD_AUART1_TX__AUART1_TX,
+
+
+    /*USB0*/
+    MX28_PAD_PWM2__USB0_ID | MUX_CONFIG_USB0,
+    MX28_PAD_SSP2_SS2__USB0_OVERCURRENT | MUX_CONFIG_USB0,
+
+	/* sdcard 0 */
+	MX28_PAD_SSP0_DATA0__SSP0_D0 | MUX_CONFIG_SSP0,
+	MX28_PAD_SSP0_DATA1__SSP0_D1 | MUX_CONFIG_SSP0,
+	MX28_PAD_SSP0_DATA2__SSP0_D2 | MUX_CONFIG_SSP0,
+	MX28_PAD_SSP0_DATA3__SSP0_D3 | MUX_CONFIG_SSP0,
+	MX28_PAD_SSP0_CMD__SSP0_CMD | MUX_CONFIG_SSP0,
+	MX28_PAD_SSP0_DETECT__SSP0_CARD_DETECT |
+		(MXS_PAD_8MA | MXS_PAD_3V3 | MXS_PAD_NOPULL),
+	MX28_PAD_SSP0_SCK__SSP0_SCK |
+		(MXS_PAD_12MA | MXS_PAD_3V3 | MXS_PAD_NOPULL),
+	/* write protect */
+	/*MX28_PAD_SSP1_SCK__GPIO_2_12,*/
+	/* MMC0 slot power enable */
+	/*MX28_PAD_PWM3__GPIO_3_28 |*/
+		/*(MXS_PAD_12MA | MXS_PAD_3V3 | MXS_PAD_PULLUP),*/
+
+
+    /*sdcard 1 (debugboard)*/
+    MX28_PAD_GPMI_WRN__SSP1_SCK | MUX_CONFIG_SSP1,
+    MX28_PAD_GPMI_RDY1__SSP1_CMD | MUX_CONFIG_SSP1,
+    MX28_PAD_GPMI_D00__SSP1_D0 | MUX_CONFIG_SSP1,
+    MX28_PAD_GPMI_D01__SSP1_D1 | MUX_CONFIG_SSP1,
+    MX28_PAD_GPMI_D02__SSP1_D2 | MUX_CONFIG_SSP1,
+    MX28_PAD_GPMI_D03__SSP1_D3 | MUX_CONFIG_SSP1,
+
+#ifdef CONFIG_NAND_MXS
+	 /*GPMI NAND */
+	MX28_PAD_GPMI_D00__GPMI_D0 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D01__GPMI_D1 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D02__GPMI_D2 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D03__GPMI_D3 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D04__GPMI_D4 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D05__GPMI_D5 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D06__GPMI_D6 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_D07__GPMI_D7 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_CE0N__GPMI_CE0N | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_RDY0__GPMI_READY0 | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_RDN__GPMI_RDN |
+		(MXS_PAD_3V3 | MXS_PAD_8MA | MXS_PAD_PULLUP),
+	MX28_PAD_GPMI_WRN__GPMI_WRN | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_ALE__GPMI_ALE | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_CLE__GPMI_CLE | MUX_CONFIG_GPMI,
+	MX28_PAD_GPMI_RESETN__GPMI_RESETN | MUX_CONFIG_GPMI,
+#endif
+
+	/* FEC0 */
+	MX28_PAD_ENET0_MDC__ENET0_MDC | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_MDIO__ENET0_MDIO | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_RX_EN__ENET0_RX_EN | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_TX_EN__ENET0_TX_EN | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_RXD0__ENET0_RXD0 | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_RXD1__ENET0_RXD1 | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_TXD0__ENET0_TXD0 | MUX_CONFIG_ENET,
+	MX28_PAD_ENET0_TXD1__ENET0_TXD1 | MUX_CONFIG_ENET,
+	MX28_PAD_ENET_CLK__CLKCTRL_ENET | MUX_CONFIG_ENET,
+	/* FEC0 Enable */
+	/*MX28_PAD_SSP1_DATA3__GPIO_2_15 |*/
+		/*(MXS_PAD_12MA | MXS_PAD_3V3),*/
+	/* FEC0 Reset */
+	MX28_PAD_ENET0_RX_CLK__GPIO_4_13 |
+		(MXS_PAD_12MA | MXS_PAD_3V3 ),
+
+	/* EMI */
+	MX28_PAD_EMI_D00__EMI_DATA0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D01__EMI_DATA1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D02__EMI_DATA2 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D03__EMI_DATA3 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D04__EMI_DATA4 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D05__EMI_DATA5 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D06__EMI_DATA6 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D07__EMI_DATA7 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D08__EMI_DATA8 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D09__EMI_DATA9 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D10__EMI_DATA10 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D11__EMI_DATA11 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D12__EMI_DATA12 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D13__EMI_DATA13 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D14__EMI_DATA14 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_D15__EMI_DATA15 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_ODT0__EMI_ODT0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DQM0__EMI_DQM0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_ODT1__EMI_ODT1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DQM1__EMI_DQM1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DDR_OPEN_FB__EMI_DDR_OPEN_FEEDBACK | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_CLK__EMI_CLK | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DQS0__EMI_DQS0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DQS1__EMI_DQS1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_DDR_OPEN__EMI_DDR_OPEN | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A00__EMI_ADDR0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A01__EMI_ADDR1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A02__EMI_ADDR2 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A03__EMI_ADDR3 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A04__EMI_ADDR4 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A05__EMI_ADDR5 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A06__EMI_ADDR6 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A07__EMI_ADDR7 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A08__EMI_ADDR8 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A09__EMI_ADDR9 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A10__EMI_ADDR10 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A11__EMI_ADDR11 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A12__EMI_ADDR12 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A13__EMI_ADDR13 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_A14__EMI_ADDR14 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_BA0__EMI_BA0 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_BA1__EMI_BA1 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_BA2__EMI_BA2 | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_CASN__EMI_CASN | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_RASN__EMI_RASN | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_WEN__EMI_WEN | MUX_CONFIG_EMI,
+	MX28_PAD_EMI_CE0N__EMI_CE0N | MUX_CONFIG_EMI,
+	/*MX28_PAD_EMI_CE1N__EMI_CE1N | MUX_CONFIG_EMI,*/
+	MX28_PAD_EMI_CKE__EMI_CKE | MUX_CONFIG_EMI,
+
+
+    /* SPI3 (analog board) */
+    MX28_PAD_GPMI_RDN__SSP3_SCK | MUX_CONFIG_SSP3, // ssp3 scl
+    MX28_PAD_GPMI_RESETN__SSP3_CMD | MUX_CONFIG_SSP3, // ssp3 mosi
+    MX28_PAD_GPMI_ALE__SSP3_D4 | MUX_CONFIG_SSP3,  // ssp3 chip select 1
+    MX28_PAD_GPMI_CE0N__SSP3_D0 | MUX_CONFIG_SSP3, // ssp3 miso
+    MX28_PAD_GPMI_CE1N__SSP3_D3 | MUX_CONFIG_SSP3, // ssp3 chip select 0
+
+	/* SPI2 (keypad controller) */
+	MX28_PAD_SSP2_SCK__SSP2_SCK | MUX_CONFIG_SSP2,
+	MX28_PAD_SSP2_MOSI__SSP2_CMD | MUX_CONFIG_SSP2,
+	MX28_PAD_SSP2_MISO__SSP2_D0 | MUX_CONFIG_SSP2,
+	MX28_PAD_SSP2_SS0__SSP2_D3 | MUX_CONFIG_SSP2,
+    MX28_PAD_SSP0_DATA7__GPIO_2_7 | (MXS_PAD_3V3 | MXS_PAD_4MA | MXS_PAD_NOPULL),
+    MX28_PAD_SSP2_SS1__GPIO_2_20  | (MXS_PAD_3V3 | MXS_PAD_4MA | MXS_PAD_NOPULL),
+
+
+	/* I2C */
+	MX28_PAD_I2C0_SCL__I2C0_SCL,
+	MX28_PAD_I2C0_SDA__I2C0_SDA,
+
+};
+
+#define HW_DRAM_CTL29	(0x74 >> 2)
+#define CS_MAP		0xf
+#define COLUMN_SIZE	0x2
+#define ADDR_PINS	0x1
+#define APREBIT		0xa
+
+#define HW_DRAM_CTL29_CONFIG	(CS_MAP << 24 | COLUMN_SIZE << 16 | \
+					ADDR_PINS << 8 | APREBIT)
+
+void mxs_adjust_memory_params(uint32_t *dram_vals)
+{
+	dram_vals[HW_DRAM_CTL29] = HW_DRAM_CTL29_CONFIG;
+}
+
+void board_init_ll(const uint32_t arg, const uint32_t *resptr)
+{
+	mxs_common_spl_init(arg, resptr, iomux_setup, ARRAY_SIZE(iomux_setup));
+}
diff --git a/board/silicann/urwerk/urwerk.c b/board/silicann/urwerk/urwerk.c
new file mode 100644
index 0000000000..11931c7508
--- /dev/null
+++ b/board/silicann/urwerk/urwerk.c
@@ -0,0 +1,133 @@
+/*
+ * Silicann urwerk platform
+ *
+ * Based on m28evk.c:
+ * Copyright (C) 2015-2017 Silicann Systems GmbH
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/gpio.h>
+#include <asm/io.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux-mx28.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/sys_proto.h>
+#include <linux/mii.h>
+#include <miiphy.h>
+#include <netdev.h>
+#include <errno.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+/*
+ * Functions
+ */
+int board_early_init_f(void)
+{
+	/* IO0 clock at 480MHz */
+	mxs_set_ioclk(MXC_IOCLK0, 480000);
+	/* IO1 clock at 480MHz */
+	mxs_set_ioclk(MXC_IOCLK1, 480000);
+
+	/* SSP0 (sdcard0) clock at 96MHz */
+	mxs_set_sspclk(MXC_SSPCLK0, 25000, 0);
+	/* SSP1 (sdcard1 [debugboard]) clock at 96MHz */
+	mxs_set_sspclk(MXC_SSPCLK1, 25000, 0);
+    /* SSP2 (keypad controller) clock at 10MHz */
+	mxs_set_sspclk(MXC_SSPCLK2, 10000, 0);
+    /* SSP3 (analog board) clock at 10MHz */
+	mxs_set_sspclk(MXC_SSPCLK2, 10000, 0);
+
+
+#ifdef	CONFIG_CMD_USB
+	mxs_iomux_setup_pad(MX28_PAD_SSP2_SS2__USB0_OVERCURRENT );
+	mxs_iomux_setup_pad(MX28_PAD_SSP0_DATA5__GPIO_2_5 |
+			MXS_PAD_4MA | MXS_PAD_3V3 | MXS_PAD_NOPULL);
+	gpio_direction_output(MX28_PAD_SSP0_DATA5__GPIO_2_5, 0);
+#endif
+
+	/* Power on LCD */
+	/*gpio_direction_output(MX28_PAD_LCD_RESET__GPIO_3_30, 1);*/
+
+	/* Set contrast to maximum */
+	/*gpio_direction_output(MX28_PAD_PWM2__GPIO_3_18, 1);*/
+
+	return 0;
+}
+
+int dram_init(void)
+{
+	return mxs_dram_init();
+}
+
+int board_init(void)
+{
+	/* Adress of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
+
+	return 0;
+}
+
+#ifdef	CONFIG_CMD_MMC
+
+int board_mmc_init(bd_t *bis)
+{
+	return mxsmmc_initialize(bis,0,0,NULL);
+}
+#endif
+
+#ifdef	CONFIG_CMD_NET
+
+int board_eth_init(bd_t *bis)
+{
+	struct mxs_clkctrl_regs *clkctrl_regs =
+		(struct mxs_clkctrl_regs *)MXS_CLKCTRL_BASE;
+	struct eth_device *dev;
+	int ret;
+
+	ret = cpu_eth_init(bis);
+	if (ret)
+		return ret;
+
+	/* MX28EVK uses ENET_CLK PAD to drive FEC clock */
+	writel(CLKCTRL_ENET_TIME_SEL_RMII_CLK | CLKCTRL_ENET_CLK_OUT_EN,
+	       &clkctrl_regs->hw_clkctrl_enet);
+
+	/* Power-on FECs */
+	gpio_direction_output(MX28_PAD_SSP1_DATA3__GPIO_2_15, 0);
+
+	/* Reset FEC PHYs */
+	gpio_direction_output(MX28_PAD_ENET0_RX_CLK__GPIO_4_13, 0);
+	udelay(200);
+	gpio_set_value(MX28_PAD_ENET0_RX_CLK__GPIO_4_13, 1);
+
+	ret = fecmxc_initialize_multi(bis, 0, 0, MXS_ENET0_BASE);
+	if (ret) {
+		puts("FEC MXS: Unable to init FEC0\n");
+		return ret;
+	}
+
+	/*ret = fecmxc_initialize_multi(bis, 1, 3, MXS_ENET1_BASE);*/
+	/*if (ret) {*/
+		/*puts("FEC MXS: Unable to init FEC1\n");*/
+		/*return ret;*/
+	/*}*/
+
+	dev = eth_get_dev_by_name("FEC0");
+	if (!dev) {
+		puts("FEC MXS: Unable to get FEC0 device entry\n");
+		return -EINVAL;
+	}
+
+	/*dev = eth_get_dev_by_name("FEC1");*/
+	/*if (!dev) {*/
+		/*puts("FEC MXS: Unable to get FEC1 device entry\n");*/
+		/*return -EINVAL;*/
+	/*}*/
+
+	return ret;
+}
+
+#endif
diff --git a/include/configs/urwerk.h b/include/configs/urwerk.h
new file mode 100644
index 0000000000..0f362c9e94
--- /dev/null
+++ b/include/configs/urwerk.h
@@ -0,0 +1,178 @@
+/*
+ * (C) Copyright 2011 Freescale Semiconductor, Inc.
+ * Author: Fabio Estevam <fabio.estevam@freescale.com>
+ *
+ * Based on m28evk.h:
+ * Copyright (C) 2011 Marek Vasut <marek.vasut@gmail.com>
+ * on behalf of DENX Software Engineering GmbH
+ *
+ * SPD License-Identifier:	GPL-2.0+
+ */
+#ifndef __CONFIGS_URWERK_H__
+#define __CONFIGS_URWERK_H__
+
+/* System configurations */
+#define CONFIG_MX28				/* i.MX28 SoC */
+#define CONFIG_MACH_TYPE	MACH_TYPE_URWERK
+#define CONFIG_SYS_MXS_VDD5V_ONLY
+
+/* custom defines */
+/* #define DEBUG*/
+#define CONFIG_SPL_SERIAL_SUPPORT
+
+/* U-Boot Commands */
+#define CONFIG_SYS_NO_FLASH
+#define CONFIG_SYS_MAX_FLASH_BANKS 0
+#define CONFIG_DISPLAY_CPUINFO
+#define CONFIG_DOS_PARTITION
+
+#define CONFIG_CMD_CACHE
+#define CONFIG_CMD_DATE
+#define CONFIG_CMD_FAT
+#define CONFIG_CMD_GPIO
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_MMC
+#define CONFIG_CMD_SF
+#define CONFIG_CMD_SPI
+#define CONFIG_CMD_BOOTZ
+#define CONFIG_CMD_FUSE
+#define CONFIG_PHYLIB
+#define CONFIG_ENV_IS_IN_MMC
+
+
+/* Memory configuration */
+#define CONFIG_NR_DRAM_BANKS		1		/* 1 bank of DRAM */
+#define PHYS_SDRAM_1				0x40000000	/* Base address */
+#define PHYS_SDRAM_1_SIZE			0x40000000	/* Max 1 GB RAM */
+#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM_1
+
+/* Environment */
+#ifndef CONFIG_ENV_IS_IN_SPI_FLASH
+#define CONFIG_ENV_SIZE			(16 * 1024)
+#else
+#define CONFIG_ENV_SIZE			(4 * 1024)
+#endif
+#define CONFIG_ENV_OVERWRITE
+
+/* Environment is in MMC */
+#if defined(CONFIG_CMD_MMC) && defined(CONFIG_ENV_IS_IN_MMC)
+#define CONFIG_ENV_OFFSET		(256 * 1024)
+#define CONFIG_SYS_MMC_ENV_DEV	0
+#endif
+
+/* Environment is in NAND */
+#if defined(CONFIG_CMD_NAND) && defined(CONFIG_ENV_IS_IN_NAND)
+#define CONFIG_ENV_SIZE_REDUND		CONFIG_ENV_SIZE
+#define CONFIG_ENV_SECT_SIZE		(128 * 1024)
+#define CONFIG_ENV_RANGE		(512 * 1024)
+#define CONFIG_ENV_OFFSET		0x300000
+#define CONFIG_ENV_OFFSET_REDUND	\
+		(CONFIG_ENV_OFFSET + CONFIG_ENV_RANGE)
+#endif
+
+/* Environemnt is in SPI flash */
+#if defined(CONFIG_CMD_SF) && defined(CONFIG_ENV_IS_IN_SPI_FLASH)
+#define CONFIG_SYS_REDUNDAND_ENVIRONMENT
+#define CONFIG_ENV_OFFSET		0x40000		/* 256K */
+#define CONFIG_ENV_OFFSET_REDUND	(CONFIG_ENV_OFFSET + CONFIG_ENV_SIZE)
+#define CONFIG_ENV_SECT_SIZE		0x1000
+#define CONFIG_ENV_SPI_CS		0
+#define CONFIG_ENV_SPI_BUS		2
+#define CONFIG_ENV_SPI_MAX_HZ		24000000
+#define CONFIG_ENV_SPI_MODE		SPI_MODE_0
+#endif
+
+/* UBI and NAND partitioning */
+#ifdef CONFIG_CMD_NAND
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_RBTREE
+#define CONFIG_LZO
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define MTDIDS_DEFAULT			"nand0=gpmi-nand"
+#define MTDPARTS_DEFAULT			\
+	"mtdparts=gpmi-nand:"			\
+		"3m(bootloader)ro,"		\
+		"512k(environment),"		\
+		"512k(redundant-environment),"	\
+		"4m(kernel),"			\
+		"512k(fdt),"			\
+		"8m(ramdisk),"			\
+		"-(filesystem)"
+#endif
+
+/* FEC Ethernet on SoC */
+#ifdef	CONFIG_CMD_NET
+#define CONFIG_FEC_MXC
+#define CONFIG_NET_MULTI
+#define CONFIG_MX28_FEC_MAC_IN_OCOTP
+#endif
+
+/* RTC */
+#ifdef	CONFIG_CMD_DATE
+#define	CONFIG_RTC_MXS
+#endif
+
+/* USB */
+#ifdef	CONFIG_CMD_USB
+#define CONFIG_EHCI_MXS_PORT1
+#define CONFIG_USB_MAX_CONTROLLER_COUNT	1
+#define	CONFIG_USB_STORAGE
+#define	CONFIG_USB_HOST_ETHER
+#define	CONFIG_USB_ETHER_ASIX
+#define	CONFIG_USB_ETHER_SMSC95XX
+#endif
+
+/* SPI */
+#ifdef CONFIG_CMD_SPI
+#define CONFIG_DEFAULT_SPI_BUS		2
+#define CONFIG_DEFAULT_SPI_MODE		SPI_MODE_0
+#endif
+
+/* SPI Flash */
+#ifdef CONFIG_CMD_SF
+#define CONFIG_SPI_FLASH
+#define CONFIG_SF_DEFAULT_BUS		2
+#define CONFIG_SF_DEFAULT_CS		0
+/* this may vary and depends on the installed chip */
+#define CONFIG_SPI_FLASH_SST
+#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
+#define CONFIG_SF_DEFAULT_SPEED		24000000
+#endif
+
+
+/* Framebuffer support */
+#ifdef CONFIG_VIDEO
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_CMD_BMP
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_VIDEO_BMP_GZIP
+#define CONFIG_SYS_VIDEO_LOGO_MAX_SIZE	(512 << 10)
+#endif
+
+/* Boot Linux */
+#define CONFIG_BOOTFILE		"uImage"
+#define CONFIG_LOADADDR		0x42000000
+#define CONFIG_SYS_LOAD_ADDR	CONFIG_LOADADDR
+
+#define CONFIG_BOOTCOMMAND \
+    "run memboot\0" \
+	"fdt_addr=0x41000000\0" \
+    "zimage_addr=0x42000000\0" \
+    "initrd_addr=0x41500000\0" \
+    "bootdelay=0\0" \
+    "baudrate=115200\0" \
+	"console_debug_line=ttyAMA0\0" \
+    "console_line=ttyAPP0\0" \
+	"memroot= root=/dev/root ro rootwait\0" \
+    "memargs=setenv bootargs console=${console_debug_line},${baudrate} console=${console_line},${baudrate} ${memroot} \0" \
+    "memboot=echo Booting from memory; run memargs; bootz ${zimage_addr} ${initrd_addr} ${fdt_addr}\0"\
+
+/* The rest of the configuration is shared */
+#include <configs/mxs.h>
+
+#endif /* __CONFIGS_URWERK_H__ */
-- 
2.18.0

